<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.0</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="AppSettingsProvider.Tests.fs" />
    <Compile Include="ResXProvider.Tests.fs" />
    <Compile Include="YamlProvider.Tests.fs" />
    <Compile Include="IniFileProvider.Tests.fs" />
    <Compile Include="Program.fs" />
    <Content Include="paket.references" />
  </ItemGroup>
  <ItemGroup>
    <!-- Note: I don't understand why Paket isn't working out this reference from the paket.references file -->
    <Reference Include="Expecto">
      <HintPath>..\..\packages\test\Expecto\lib\netstandard1.6\Expecto.dll</HintPath>
    </Reference>
    <!-- Note: This is referring to the Debug version, which is not normally what we want?-->
    <Reference Include="FSharp.Configuration, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>..\..\src\FSharp.Configuration\bin\Debug\netstandard2.0\FSharp.Configuration.dll</HintPath>
    </Reference>
    <!-- These files are the facades necessary to run .NET Standard 2.0 components on .NET Framweork 4.6.1 (.NET Framework 4.7 will -->
    <!-- come with these facades included). Because the type provider is a .NET Standard 2.0 component, the deployment of the type -->
    <!--  provider must include these facade DLLs if it is to run hosted inside an F# compiler executing using  .NET Framework 4.6.1 or Mono 5.0. -->
    <!-- -->
    <!-- We are not yet sure if the presence of these files will prevent an otherwise .NET Standard 2.0 type provider running inside a -->
    <!-- F# compiler executing using .NET CoreApp 2.0, as until recently F# compilers running using .NET CoreApp 2.0 do not load type providers correctly. -->
    <None Include="..\..\packages\build\NETStandard.Library.NETFramework\build\net461\lib\netstandard.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\packages\build\NETStandard.Library.NETFramework\build\net461\lib\System.Reflection.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="..\..\packages\build\NETStandard.Library.NETFramework\build\net461\lib\System.Runtime.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>